[{"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\AddContract.js":"1","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Profile.js":"2","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Home.js":"3","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\CheckDev.js":"4","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\DevJobsTable.js":"5","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\AcceptedJobsTable.js":"6","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\PendingJobsTable.js":"7","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\App.js":"8","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Com_Registration.js":"9","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Login.js":"10","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\index.js":"11","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\serviceWorker.js":"12","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Dev_Registration.js":"13","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\ContractPage.js":"14","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\ProtectedRoute.js":"15","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Header.js":"16","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Menu.js":"17","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Contracts.js":"18","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Button.js":"19","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Contract.js":"20","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Modal.js":"21"},{"size":3637,"mtime":1647781902441,"results":"22","hashOfConfig":"23"},{"size":12297,"mtime":1647776305399,"results":"24","hashOfConfig":"23"},{"size":863,"mtime":1647780720510,"results":"25","hashOfConfig":"23"},{"size":695,"mtime":1647781417530,"results":"26","hashOfConfig":"23"},{"size":5196,"mtime":1647785654445,"results":"27","hashOfConfig":"23"},{"size":3146,"mtime":1647785609941,"results":"28","hashOfConfig":"23"},{"size":3143,"mtime":1647785621390,"results":"29","hashOfConfig":"23"},{"size":1272,"mtime":1647781514595,"results":"30","hashOfConfig":"23"},{"size":6315,"mtime":1647781405214,"results":"31","hashOfConfig":"23"},{"size":4958,"mtime":1647782167650,"results":"32","hashOfConfig":"23"},{"size":464,"mtime":1647699221472,"results":"33","hashOfConfig":"23"},{"size":5086,"mtime":1647699221474,"results":"34","hashOfConfig":"23"},{"size":11267,"mtime":1647715009930,"results":"35","hashOfConfig":"23"},{"size":5534,"mtime":1647724149307,"results":"36","hashOfConfig":"23"},{"size":518,"mtime":1647699221470,"results":"37","hashOfConfig":"23"},{"size":463,"mtime":1647699221468,"results":"38","hashOfConfig":"23"},{"size":1125,"mtime":1647699221468,"results":"39","hashOfConfig":"23"},{"size":819,"mtime":1647700510090,"results":"40","hashOfConfig":"23"},{"size":398,"mtime":1647699221466,"results":"41","hashOfConfig":"23"},{"size":1622,"mtime":1647699221467,"results":"42","hashOfConfig":"23"},{"size":1138,"mtime":1647699221468,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"1ao47k4",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\AddContract.js",["114","115","116","117","118"],[],"import { useState } from 'react'\r\nimport React from \"react\"\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nconst AddContract = ({ onAdd, showAdd }) => {\r\n    const [contractName, setName] = useState('')\r\n    const [contractLength, setLength] = useState('')\r\n    const [contractValue, setValue] = useState('')\r\n    const [contractDes, setDes] = useState('')\r\n    const [contractLan, setLan] = useState('')\r\n    const [location, setLocation] = useState('')\r\n    const [expandContract] = useState(false)\r\n    const [open] = useState(true)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!contractLength || !contractName || !contractValue || !contractDes || !contractLan) {\r\n            alert('Please fill all boxes')\r\n            return\r\n        }\r\n\r\n        if (location == '') {\r\n            alert('Please select one of either remote or office')\r\n            return\r\n        }\r\n\r\n        onAdd({ contractName: contractName,contractLength: contractLength, contractValue: contractValue, contractDes: contractDes, contractLan: contractLan, location:location , expandContract, open })\r\n        \r\n        setName('')\r\n        setLength('')\r\n        setValue('')\r\n        setDes('')\r\n        setLan('')\r\n        setLocation('')\r\n        window.location.reload();\r\n    }\r\n  return (\r\n      \r\n    <form className='add-form' onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n            <label>Contract Name</label>\r\n            <input type='text' placeholder='Add contract name' value={contractName} onChange={(e) => setName(e.target.value)}\r\n            />\r\n        </div>\r\n        <div className='form-control'>\r\n            <label>Contract Length (Months)</label>\r\n            <input type='number' placeholder='Add contract length' value={contractLength} onChange={(e) => setLength(e.target.value)}\r\n            />\r\n        </div>\r\n        <div className='form-control'>\r\n            <label>Contract Value(ZAR)</label>\r\n            <input type='number' placeholder='Add contract value' \r\n            value={contractValue} onChange={(e) => setValue(e.target.value)}\r\n            />\r\n        </div>\r\n        <div className='form-control'>\r\n            <label>Contract Description</label>\r\n            <input type='text' placeholder='Add contract description' \r\n            value={contractDes} onChange={(e) => setDes(e.target.value)}\r\n            />\r\n        </div>\r\n        <div className='form-control'>\r\n            <label>Preferred Programming Languages</label>\r\n            <select className=\"comConSelect\" required value={contractLan} onChange={(e) => setLan(e.target.value)}>\r\n            <option value={\"None\"} hidden >Select preferred language</option>\r\n            <option value={\"Java\"} >Java</option>\r\n            <option value={\"Python\"} >Python</option>\r\n            <option value={\"C\"}> C/C++</option>\r\n            <option value={\"Go\"} >Go</option>         \r\n        </select>\r\n        </div>\r\n        <label >Location:</label>\r\n        <div className='form-control form-control-check'>\r\n            <label>Office</label>\r\n            <input type='radio' name='location' \r\n            //checked={office}\r\n            onChange={(e) => setLocation('office') }\r\n            />\r\n            <label>Remote</label>\r\n            <input type='radio' name='location'\r\n            //checked={remote}\r\n            onChange={(e) => setLocation('remote')}\r\n            />\r\n        </div>\r\n            <input type='submit' value='Save contract' \r\n        className='btn btn-block' />\r\n        \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddContract",["119","120"],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Profile.js",["121","122","123","124"],[],"import React from 'react'\r\nimport './CSS/DevRegCSS.css'\r\nimport ReactDOM from 'react-dom'\r\nimport Home from './Home'\r\nimport { Component } from 'react'\r\n\r\nconst ImgUpload = ({\r\n    onChange,\r\n    src\r\n}) =>\r\n    <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\r\n        <div className=\"img-wrap img-upload\" >\r\n            <img htmlFor=\"photo-upload\" src={src} alt=\"profile\" />\r\n        </div>\r\n        <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\r\n    </label>\r\n\r\n\r\nconst FullName = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"name\">\r\n            Full Name:\r\n        </label>\r\n        <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            maxLength=\"25\"\r\n            value={value}\r\n            placeholder=\"Alexa\"\r\n            required />\r\n    </div>\r\n\r\nconst Email = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"email\">\r\n            Email:\r\n        </label>\r\n        <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            onChange={onChange}\r\n            maxLength=\"25\"\r\n            value={value}\r\n            placeholder=\"jbloggs@mail.com\"\r\n            required />\r\n    </div>\r\n\r\nconst Password = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"password\">\r\n            Password:\r\n        </label>\r\n        <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            maxLength=\"25\"\r\n            value={value}\r\n            placeholder=\"password\"\r\n            required />\r\n    </div>\r\n\r\nconst ScaleJava = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\" onChange={onChange} value={value}>\r\n\r\n        <label htmlFor=\"scale\">Programming Experience in JavaScript:</label>\r\n        <ul className='likert' >\r\n            <li>\r\n                <input type=\"radio\" name=\"likertJava\" value=\"None\" />\r\n                <label className=\"statement\" >None</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertJava\" value=\"Beginner\" />\r\n                <label className=\"statement\">Beginner</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertJava\" value=\"Intermediate\" />\r\n                <label className=\"statement\">Intermediate</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertJava\" value=\"Advanced\" />\r\n                <label className=\"statement\">Advanced</label>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\nconst ScalePython = ({\r\n    onChange,\r\n    value\r\n}) => <div className=\"field\" onChange={onChange} value={value} >\r\n        <label htmlFor=\"scale\">Programming Experience in Python:</label>\r\n        <ul className='likert' >\r\n            <li>\r\n                <input type=\"radio\" name=\"likertPython\" value=\"None\" />\r\n                <label className=\"statement\" >None</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertPython\" value=\"Beginner\" />\r\n                <label className=\"statement\">Beginner</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertPython\" value=\"Intermediate\" />\r\n                <label className=\"statement\">Intermediate</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertPython\" value=\"Advanced\" />\r\n                <label className=\"statement\">Advanced</label>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\nconst ScaleC = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\" onChange={onChange} value={value}>\r\n        <label htmlFor=\"scale\">Programming Experience in C/C++:</label>\r\n        <ul className='likert' >\r\n            <li>\r\n                <input type=\"radio\" name=\"likertC\" value=\"None\" />\r\n                <label className=\"statement\" >None</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertC\" value=\"Beginner\" />\r\n                <label className=\"statement\">Beginner</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertC\" value=\"Intermediate\" />\r\n                <label className=\"statement\">Intermediate</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertC\" value=\"Advanced\" />\r\n                <label className=\"statement\">Advanced</label>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\nconst ScaleGo = ({\r\n    onChange,\r\n    value,\r\n}) =>\r\n    <div className=\"field\" onChange={onChange} value={value} >\r\n        <label htmlFor=\"scale\">Programming Experience in Go:</label>\r\n        <ul className='likert' >\r\n            <li>\r\n                <input type=\"radio\" name=\"likertGo\" value=\"None\" />\r\n                <label className=\"statement\" >None</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertGo\" value=\"Beginner\" />\r\n                <label className=\"statement\">Beginner</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertGo\" value=\"Intermediate\" />\r\n                <label className=\"statement\">Intermediate</label>\r\n            </li>\r\n            <li>\r\n                <input type=\"radio\" name=\"likertGo\" value=\"Advanced\" />\r\n                <label className=\"statement\">Advanced</label>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\nconst handleDelete = () => {\r\n    //delete accounts\r\n    const requestOpt = {\r\n        method: 'DELETE',\r\n        headers: {'Content-Type': 'application/json'},\r\n    }\r\n    async function fetchFunc() {\r\n        return await fetch('http://127.0.0.1:5000/devDelete', requestOpt)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n    }\r\n    (async () => {\r\n        let info = await fetchFunc();\r\n    })()\r\n    alert(\"Deleted Account\");\r\n    localStorage.clear();\r\n    window.location.pathname = \"/login\";\r\n\r\n};\r\n\r\nconst Profile = ({\r\n    onSubmit,\r\n    src,\r\n    name,\r\n    email,\r\n    scaleJava,\r\n    scalePython,\r\n    scaleC,\r\n    scaleGo,\r\n}) =>\r\n    <div className=\"card\">\r\n        <form onSubmit={onSubmit}>\r\n            <h1>Profile Preview</h1>\r\n            <label className=\"custom-file-upload fas\">\r\n                <div className=\"img-wrap\" >\r\n                    <img for=\"photo-upload\" src={src} alt=\"Upload\" />\r\n                </div>\r\n            </label>\r\n            <div className=\"name\">{name}</div>\r\n            <div className=\"email\">{email}</div>\r\n            <div className=\"scale\">JavaScript - {scaleJava}</div>\r\n            <div className=\"scale\">Python - {scalePython}</div>\r\n            <div className=\"scale\">C/C++ - {scaleC}</div>\r\n            <div className=\"scale\">Go - {scaleGo}</div>\r\n            <button type=\"submit\" className=\"styleBtn edit\">Edit Details </button>\r\n            <button className=\"deleteBtn\" onClick={handleDelete}>Delete Account </button>\r\n        </form>\r\n    </div>\r\n\r\nconst handleHome = () => {\r\n    if (localStorage.getItem(\"isAuthenticated\")) {\r\n        window.location.pathname = \"/\";\r\n    }\r\n\r\n};\r\n\r\nconst Edit = ({\r\n    onSubmit,\r\n    children,\r\n}) =>\r\n    <div className=\"card\">\r\n        <form onSubmit={onSubmit}>\r\n            <h1>Edit Profile Details</h1>\r\n            {children}\r\n            <button /*type=\"submit\"*/ className=\"styleBtn save\" onClick={handleHome}>Save & Exit </button>\r\n        </form>\r\n    </div>\r\n\r\nclass DevProfile extends React.Component {\r\n    state = {\r\n        file: '',\r\n        imagePreviewUrl: 'https://github.com/OlgaKoplik/CodePen/blob/master/profile.jpg?raw=true',\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        scaleJava: 'None',\r\n        scalePython: 'None',\r\n        scaleC: 'None',\r\n        scaleGo: 'None',\r\n        active: 'edit'\r\n    }\r\n\r\n    photoUpload = e => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        const file = e.target.files[0];\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                file: file,\r\n                imagePreviewUrl: reader.result\r\n            });\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n    editName = e => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            name,\r\n        });\r\n    }\r\n\r\n    editEmail = e => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            email,\r\n        });\r\n    }\r\n\r\n    editPassword = e => {\r\n        const password = e.target.value;\r\n        this.setState({\r\n            password,\r\n        });\r\n    }\r\n\r\n    editScaleJava = e => {\r\n        const scaleJava = e.target.value;\r\n        this.setState({\r\n            scaleJava,\r\n        });\r\n    }\r\n\r\n    editScalePython = e => {\r\n        const scalePython = e.target.value;\r\n        this.setState({\r\n            scalePython,\r\n        });\r\n    }\r\n\r\n    editScaleC = e => {\r\n        const scaleC = e.target.value;\r\n        this.setState({\r\n            scaleC,\r\n        });\r\n    }\r\n\r\n    editScaleGo = e => {\r\n        const scaleGo = e.target.value;\r\n        this.setState({\r\n            scaleGo,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let data = this.state;\r\n        const requestOpt = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                'name': data.name,\r\n                'password': data.password,\r\n                'email': data.email,\r\n                'scaleJava': data.scaleJava,\r\n                'scalePython': data.scalePython,\r\n                'scaleC': data.scaleC,\r\n                'scaleGo': data.scaleGo\r\n            }),\r\n        }\r\n        async function fetchFunc() {\r\n            return await fetch('http://127.0.0.1:5000/devEdit', requestOpt)\r\n            .then(response => response.json())\r\n            .catch(error => console.log(error));\r\n        }\r\n        (async () => {\r\n            let info = await fetchFunc();\r\n            if (info.success) { \r\n                if (localStorage.getItem(\"isAuthenticated\")) {\r\n                    let activeP = this.state.active === 'edit' ? 'profile' : 'edit';\r\n                    this.setState({\r\n                        active: activeP,\r\n                    });\r\n                }\r\n            } else {\r\n                alert(info.msg);\r\n            }\r\n        })()\r\n    }\r\n\r\n    handleEdit = e => {\r\n        e.preventDefault();\r\n\r\n        if (localStorage.getItem(\"isAuthenticated\")) {\r\n            let activeP = this.state.active === 'edit' ? 'profile' : 'edit';\r\n            this.setState({\r\n                active: activeP,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { imagePreviewUrl,\r\n            name,\r\n            email,\r\n            password,\r\n            scaleJava,\r\n            scalePython,\r\n            scaleC,\r\n            scaleGo,\r\n            active } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                {(active === 'edit') ? (\r\n                    <Profile\r\n                        onSubmit={this.handleEdit}\r\n                        src={imagePreviewUrl}\r\n                        name={name}\r\n                        email={email}\r\n                        password={password}\r\n                        scaleJava={scaleJava}\r\n                        scalePython={scalePython}\r\n                        scaleC={scaleC}\r\n                        scaleGo={scaleGo}\r\n                    />\r\n                ) : (<Edit onSubmit={this.handleSubmit}>\r\n                    <ImgUpload onChange={this.photoUpload} src={imagePreviewUrl} />\r\n                    <FullName onChange={this.editName} value={name} />\r\n                    <Email onChange={this.editEmail} value={email} />\r\n                    <Password onChange={this.editPassword} value={password} />\r\n                    <ScaleJava onChange={this.editScaleJava} value={scaleJava} />\r\n                    <ScalePython onChange={this.editScalePython} value={scalePython} />\r\n                    <ScaleC onChange={this.editScaleC} value={scaleC} />\r\n                    <ScaleGo onChange={this.editScaleGo} value={scaleGo} />\r\n                </Edit>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DevProfile;\r\n","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Home.js",["125","126","127"],[],"import React, { PureComponent } from 'react'\r\nimport ContractPage from './ContractPage';\r\nimport './CSS/Home.css';\r\nimport DevJobsTable from './DevJobsTable'\r\nimport CheckDev from './Other/CheckDev';\r\n\r\n\r\nfunction Home() {\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    window.location.pathname = \"/login\";\r\n  };\r\n  return (\r\n    <>\r\n      <nav id=\"navbar\" class=\"\">\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"logo\">\r\n            <label >DevCo</label>\r\n\r\n          </div>\r\n\r\n          <ul id=\"menu\">\r\n            <li>\r\n              <a href=\"/DevProfile\">Profile</a>\r\n            </li>\r\n            <li>\r\n              <button className=\"styleBtn\" onClick={handleLogout} >Logout </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n      </nav>\r\n      <CheckDev />\r\n\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\CheckDev.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\DevJobsTable.js",["128"],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\AcceptedJobsTable.js",["129"],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\PendingJobsTable.js",["130"],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\App.js",["131","132","133","134"],[],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport DevReg from './Components/Dev_Registration'\r\nimport ComReg from './Components/Com_Registration'\r\nimport Login from './Components/Login'\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Home from './Components/Home';\r\nimport ProtectedRoute from './Components/ProtectedRoute';\r\nimport DevProfile from './Components/Profile';\r\nimport ContractPage from './Components/ContractPage';\r\nimport './Components/CSS/LoginCSS.css';\r\nimport DevJobsTable from './Components/DevJobsTable'\r\nimport PendingContractTable from './Components/PendingJobsTable';\r\nimport AcceptedContractTable from './Components/AcceptedJobsTable';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Router>\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/DevReg' component={DevReg} />\r\n          <Route exact path='/ComReg' component={ComReg} />\r\n          <ProtectedRoute exact path='/DevProfile' component={DevProfile} />\r\n          <ProtectedRoute exact path='/' component={Home} />\r\n          <ProtectedRoute exact path='/contracts' component={ContractPage} />\r\n        </Router>\r\n      </div>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Com_Registration.js",["135"],[],"import React from 'react'\r\nimport './CSS/DevRegCSS.css'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst ImgUpload = ({\r\n    onChange,\r\n    src\r\n}) =>\r\n    <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\r\n        <div className=\"img-wrap img-upload\" >\r\n            <img for=\"photo-upload\" src={src} alt=\"profile\" />\r\n        </div>\r\n        <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\r\n    </label>\r\n\r\n\r\nconst CompanyName = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"name\">\r\n            Unique Company Name:\r\n        </label>\r\n        <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            maxlength=\"25\"\r\n            value={value}\r\n            placeholder=\"Apple Ltd\"\r\n            required />\r\n    </div>\r\n\r\nconst Password = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"password\">\r\n            Password:\r\n        </label>\r\n        <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            maxlength=\"25\"\r\n            value={value}\r\n            placeholder=\"password\"\r\n            required />\r\n    </div>\r\n\r\nconst GeneralIndustries = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\" value={value} onChange={onChange}>\r\n        <label htmlFor=\"industry\">\r\n            General Industry:\r\n        </label>\r\n        <select>\r\n            <option value={\"not selected\"} >Select an industry</option>\r\n            <option value={\"Finance and Banking\"} >Finance and Banking</option>\r\n            <option value={\"Communication and Information Technology\"}> Communication and Information Technology </option>\r\n            <option value={\"Transport and Logistics\"} >Transport and Logistics</option>\r\n            <option value={\"Mining\"} >Mining</option>\r\n            <option value={\"Healthcare\"} >Healthcare</option>\r\n            <option value={\"Insurance\"} >Insurance</option>\r\n            <option value={\"Automobile\"} >Automobile</option>\r\n            <option value={\"Food Services\"} >Food Services</option>\r\n        </select>\r\n    </div>\r\n\r\nconst Profile = ({\r\n    onSubmit,\r\n    src,\r\n    name,\r\n    industry,\r\n\r\n}) =>\r\n    <div className=\"card\">\r\n        <form onSubmit={onSubmit}>\r\n            <h1>Successfully Registered</h1>\r\n            <label className=\"custom-file-upload fas\">\r\n                <div className=\"img-wrap\" >\r\n                    <img for=\"photo-upload\" src={src} alt=\"Upload\" />\r\n                </div>\r\n            </label>\r\n            <div className=\"name\">{name}</div>\r\n            <div className=\"industry\">{industry}</div>\r\n            <button type=\"submit\" className=\"edit\" >Edit Details </button>\r\n        </form>\r\n    </div>\r\n\r\n\r\nconst Edit = ({\r\n    onSubmit,\r\n    children,\r\n}) =>\r\n    <div className=\"card\">\r\n        <form onSubmit={onSubmit}>\r\n            <h1>Company Registration</h1>\r\n            {children}\r\n            <button type=\"submit\" className=\"styleBtn save\">Save </button>\r\n        </form>\r\n    </div>\r\n\r\n\r\nclass ComReg extends React.Component {\r\n    state = {\r\n        file: '',\r\n        imagePreviewUrl: 'https://github.com/OlgaKoplik/CodePen/blob/master/profile.jpg?raw=true',\r\n        name: '',\r\n        password: '',\r\n        industry: '',\r\n        active: 'edit'\r\n    }\r\n\r\n    photoUpload = e => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        const file = e.target.files[0];\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                file: file,\r\n                imagePreviewUrl: reader.result\r\n            });\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n    editName = e => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            name,\r\n        });\r\n    }\r\n\r\n    editIndustry = e => {\r\n        const industry = e.target.value;\r\n        this.setState({\r\n            industry,\r\n        });\r\n    }\r\n\r\n    editPassword = e => {\r\n        const password = e.target.value;\r\n        this.setState({\r\n            password,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let data = this.state;\r\n        const requestOpt = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                'name': data.name,\r\n                'password': data.password,\r\n                'industry': data.industry\r\n            }),\r\n        }\r\n        async function fetchFunc() {\r\n            return await fetch('http://127.0.0.1:5000/comReg', requestOpt)\r\n                .then(response => response.json())\r\n                .catch(error => console.log(error));\r\n        }\r\n        (async () => {\r\n            let info = await fetchFunc();\r\n            if (info.success) {\r\n                let activeP = data.active === 'edit' ? 'profile' : 'edit';\r\n                this.setState({\r\n                    active: activeP,\r\n                })\r\n            } else {\r\n                alert(info.msg);\r\n            }\r\n        })()\r\n        window.location.pathname = \"/login\";\r\n    }\r\n\r\n    render() {\r\n        const { imagePreviewUrl,\r\n            name,\r\n            password,\r\n            industry,\r\n            active } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                {(active === 'edit') ? (\r\n                    <Edit onSubmit={this.handleSubmit}>\r\n                        <ImgUpload onChange={this.photoUpload} src={imagePreviewUrl} />\r\n                        <CompanyName onChange={this.editName} value={name} />\r\n                        <Password onChange={this.editPassword} value={password} />\r\n                        <GeneralIndustries onChange={this.editIndustry} value={industry} />\r\n                    </Edit>\r\n                ) : (\r\n                    <Profile\r\n                        onSubmit={this.handleSubmit}\r\n                        src={imagePreviewUrl}\r\n                        name={name}\r\n                        password={password}\r\n                        industry={industry}\r\n                    />)}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//     <>\r\n//         <ComReg />\r\n//     </>\r\n//     ,\r\n//     document.getElementById('root')\r\n// )\r\nexport default ComReg;\r\n","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Login.js",["136","137","138","139","140"],[],"import React, { useState } from 'react'\r\nimport './CSS/LoginCSS.css'\r\nimport ReactDOM from 'react-dom'\r\nimport logo from '../DevCo.gif'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ComReg from './Com_Registration'\r\nimport DevReg from './Dev_Registration'\r\n\r\nconst ImgUpload = ({\r\n    onChange,\r\n    src\r\n}) =>\r\n\r\n    <div  >\r\n        <img htmlFor=\"photo-upload\" className='loginimg' src={src} alt=\"DEVCO LOGO\" />\r\n    </div>\r\n\r\nconst Email = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"email\">\r\n            Developer Email / Company Name:\r\n        </label>\r\n        <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            maxlength=\"25\"\r\n            value={value}\r\n            placeholder=\"jbloggs@mail.com\"\r\n            required />\r\n    </div>\r\n\r\nconst Password = ({\r\n    onChange,\r\n    value\r\n}) =>\r\n    <div className=\"field\">\r\n        <label htmlFor=\"password\">\r\n            Password:\r\n        </label>\r\n        <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            maxlength=\"25\"\r\n            value={value}\r\n            placeholder=\"password\"\r\n            required />\r\n    </div>\r\n\r\nconst handleDevReg = () => {\r\n    window.location.pathname = \"/DevReg\";\r\n};\r\n\r\nconst handleComReg = () => {\r\n    window.location.pathname = \"/ComReg\";\r\n};\r\n\r\nconst Edit = ({\r\n    onSubmit,\r\n    children,\r\n}) =>\r\n    <div className=\"card\">\r\n        <form onSubmit={onSubmit}>\r\n            {children}\r\n            <button type=\"submit\" className=\"styleBtn login\">LOGIN </button>\r\n            <div>\r\n                <button className=\"DRegBtn\" onClick={handleDevReg}>Developer Registration</button>\r\n                <button className=\"CRegBtn\" onClick={handleComReg}>Company Registration</button>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n\r\nconst Profile = ({\r\n    onSubmit,\r\n    email,\r\n    password,\r\n}) =>\r\n    <div className=\"card\">\r\n        <form onSubmit={onSubmit}>\r\n            <h1>Successfully Logged in</h1>\r\n            <div className=\"email\">{email}</div>\r\n            <div className=\"password\">{password}</div>\r\n\r\n        </form>\r\n    </div>\r\n\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        active: 'edit',\r\n    }\r\n\r\n    editEmail = e => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            email,\r\n        });\r\n    }\r\n\r\n    editPassword = e => {\r\n        const password = e.target.value;\r\n        this.setState({\r\n            password,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        let data = this.state;\r\n        const requestOpt = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                'email': data.email,\r\n                'password': data.password,\r\n            }),\r\n        }\r\n        async function fetchFunc() {\r\n            return await fetch('http://127.0.0.1:5000/login', requestOpt)\r\n                .then(response => response.json())\r\n                .catch(error => console.log(error));\r\n        }\r\n        (async () => {\r\n            let info = await fetchFunc();\r\n            if (info.success) { // correct login info\r\n                // let activeP = data.active === 'edit' ? 'profile' : 'edit';\r\n                // this.setState({\r\n                //     active: activeP,\r\n                // })\r\n                //<Redirect to=\"/\" />\r\n                localStorage.setItem(\"isAuthenticated\", \"true\");\r\n                if (info.developer) {\r\n                    localStorage.setItem(\"isDev\", \"true\");\r\n                    localStorage.setItem(\"DevJobsTable_status\", \"available\");\r\n                } else {\r\n                    localStorage.setItem(\"isDev\", \"false\");\r\n                }\r\n                window.location.pathname = \"/\";\r\n\r\n            } else {\r\n                alert(info.msg);\r\n\r\n            }\r\n        })()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n            password,\r\n            active } = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                {(active === 'edit') ? (\r\n\r\n                    <Edit onSubmit={this.handleSubmit}>\r\n                        <ImgUpload src={logo} className=\"loginimg\" />\r\n                        <Email onChange={this.editEmail} value={email} />\r\n                        <Password onChange={this.editPassword} value={password} />\r\n                    </Edit>\r\n\r\n\r\n                ) : (\r\n                    <Profile\r\n                        onSubmit={this.handleSubmit}\r\n                        email={email}\r\n                        password={password}\r\n                    />)}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// ReactDOM.render(\r\n//     <>\r\n//         <Login />\r\n//     </>\r\n//     ,\r\n//     document.getElementById('root')\r\n// )\r\n\r\nexport default Login;","C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\index.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\serviceWorker.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Dev_Registration.js",["141"],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\ContractPage.js",["142","143","144","145"],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\ProtectedRoute.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Header.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Menu.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Contracts.js",["146","147"],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Button.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Contract.js",[],[],"C:\\Users\\mfsas\\OneDrive\\Documents\\DevCo\\dev-co\\group_32\\frontend\\src\\Components\\Other\\Modal.js",[],[],{"ruleId":"148","severity":1,"message":"149","line":3,"column":27,"nodeType":"150","messageId":"151","endLine":3,"endColumn":33},{"ruleId":"148","severity":1,"message":"152","line":3,"column":35,"nodeType":"150","messageId":"151","endLine":3,"endColumn":40},{"ruleId":"148","severity":1,"message":"153","line":3,"column":42,"nodeType":"150","messageId":"151","endLine":3,"endColumn":46},{"ruleId":"148","severity":1,"message":"154","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":24,"column":22,"nodeType":"157","messageId":"158","endLine":24,"endColumn":24},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"148","severity":1,"message":"163","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"164","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":12},{"ruleId":"148","severity":1,"message":"165","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":19},{"ruleId":"148","severity":1,"message":"166","line":190,"column":13,"nodeType":"150","messageId":"151","endLine":190,"endColumn":17},{"ruleId":"148","severity":1,"message":"167","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":30},{"ruleId":"148","severity":1,"message":"168","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"169","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"170","line":48,"column":11,"nodeType":"150","messageId":"151","endLine":48,"endColumn":22},{"ruleId":"148","severity":1,"message":"170","line":21,"column":11,"nodeType":"150","messageId":"151","endLine":21,"endColumn":22},{"ruleId":"148","severity":1,"message":"170","line":21,"column":11,"nodeType":"150","messageId":"151","endLine":21,"endColumn":22},{"ruleId":"148","severity":1,"message":"165","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"169","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":20},{"ruleId":"148","severity":1,"message":"171","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":28},{"ruleId":"148","severity":1,"message":"172","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":29},{"ruleId":"148","severity":1,"message":"163","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"173","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"163","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"174","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"175","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":14},{"ruleId":"148","severity":1,"message":"176","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":14},{"ruleId":"148","severity":1,"message":"163","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"152","line":5,"column":35,"nodeType":"150","messageId":"151","endLine":5,"endColumn":40},{"ruleId":"148","severity":1,"message":"177","line":81,"column":9,"nodeType":"150","messageId":"151","endLine":81,"endColumn":23},{"ruleId":"148","severity":1,"message":"178","line":109,"column":9,"nodeType":"150","messageId":"151","endLine":109,"endColumn":23},{"ruleId":"148","severity":1,"message":"179","line":130,"column":9,"nodeType":"150","messageId":"151","endLine":130,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":14,"column":51,"nodeType":"157","messageId":"158","endLine":14,"endColumn":53},{"ruleId":"155","severity":1,"message":"156","line":20,"column":51,"nodeType":"157","messageId":"158","endLine":20,"endColumn":53},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'ReactDOM' is defined but never used.","'Home' is defined but never used.","'Component' is defined but never used.","'info' is assigned a value but never used.","'PureComponent' is defined but never used.","'ContractPage' is defined but never used.","'DevJobsTable' is defined but never used.","'routeChange' is assigned a value but never used.","'PendingContractTable' is defined but never used.","'AcceptedContractTable' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'ComReg' is defined but never used.","'DevReg' is defined but never used.","'deleteContract' is assigned a value but never used.","'showDevelopers' is assigned a value but never used.","'toggleExpand' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]