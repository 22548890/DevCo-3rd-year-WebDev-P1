{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\frontend\\\\src\\\\Components\\\\DisplayTable.js\";\nimport React, { useState } from 'react';\nimport JsonData from '../contract.json';\nimport \"./CSS/Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SortTable extends React.Component {\n  // let JsonData = '';\n  // const requestOpt = {\n  //   method: 'GET',\n  //   headers: { 'Content-Type': 'application/json' },\n  // }\n  // async function fetchFunc() {\n  //   return await fetch('http://127.0.0.1:5000/getContracts', requestOpt)\n  //     .then(response => response.json())\n  //     .catch(error => console.log(error));\n  // }\n  //  (async () => {\n  //   JsonData = await fetchFunc();\n  //   JsonData=JSON.stringify(JsonData);\n  //   //alert(JSON.stringify(JsonData));\n  // })()\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalReactPackages: null\n    };\n  }\n\n  componentDidMount() {\n    // GET request using fetch with set headers\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    fetch('http://127.0.0.1:5000/getContracts', {\n      headers\n    }).then(response => response.json()).then(data => this.setState({\n      totalReactPackages: data.total\n    }));\n  }\n\n  render() {\n    //const [data, setData] = useState(JsonData);\n    const [data, setData] = this.data; //const { totalReactPackages } = this.state;\n\n    const [order, setOrder] = this.state('ASC');\n\n    const sorting = column => {\n      if (order === 'ASC') {\n        const sorted = [...data].sort((a, b) => a[column].toLowerCase() > b[column].toLowerCase() ? 1 : -1);\n        setData(sorted);\n        setOrder('DSC');\n      }\n\n      if (order === 'DSC') {\n        const sorted = [...data].sort((a, b) => a[column].toLowerCase() > b[column].toLowerCase() ? 1 : -1);\n        setData(sorted);\n        setOrder('ASC');\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tbl-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"myTable\",\n        class: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"contract_name\"),\n              children: \"Contract Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"contract_length\"),\n              children: \"Contract Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"contract_value\"),\n              children: \"Contract Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"description\"),\n              children: \"Contract Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"progamming_language\"),\n              children: \"Programming Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"location\"),\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => sorting(\"date\"),\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.contract_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.contract_length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.contract_value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.progamming_language\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, d.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport { SortTable };","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/frontend/src/Components/DisplayTable.js"],"names":["React","useState","JsonData","SortTable","Component","constructor","props","state","totalReactPackages","componentDidMount","headers","fetch","then","response","json","data","setState","total","render","setData","order","setOrder","sorting","column","sorted","sort","a","b","toLowerCase","map","d","contract_name","contract_length","contract_value","description","progamming_language","location","date","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport JsonData from '../contract.json'\r\nimport \"./CSS/Table.css\"\r\n\r\n\r\nclass SortTable extends React.Component {\r\n  // let JsonData = '';\r\n  // const requestOpt = {\r\n  //   method: 'GET',\r\n  //   headers: { 'Content-Type': 'application/json' },\r\n  // }\r\n  // async function fetchFunc() {\r\n  //   return await fetch('http://127.0.0.1:5000/getContracts', requestOpt)\r\n  //     .then(response => response.json())\r\n  //     .catch(error => console.log(error));\r\n  // }\r\n  //  (async () => {\r\n  //   JsonData = await fetchFunc();\r\n  //   JsonData=JSON.stringify(JsonData);\r\n  //   //alert(JSON.stringify(JsonData));\r\n  // })()\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalReactPackages: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // GET request using fetch with set headers\r\n    const headers = { 'Content-Type': 'application/json' }\r\n    fetch('http://127.0.0.1:5000/getContracts', { headers })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ totalReactPackages: data.total }));\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    //const [data, setData] = useState(JsonData);\r\n    const [data, setData] = this.data;\r\n    //const { totalReactPackages } = this.state;\r\n    const [order, setOrder] = this.state('ASC');\r\n\r\n    const sorting = (column) => {\r\n      if (order === 'ASC') {\r\n        const sorted = [...data].sort((a, b) =>\r\n          a[column].toLowerCase() > b[column].toLowerCase() ? 1 : -1\r\n        );\r\n        setData(sorted);\r\n        setOrder('DSC');\r\n      }\r\n      if (order === 'DSC') {\r\n        const sorted = [...data].sort((a, b) =>\r\n          a[column].toLowerCase() > b[column].toLowerCase() ? 1 : -1\r\n        );\r\n        setData(sorted);\r\n        setOrder('ASC');\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"tbl-container\">\r\n        <table id=\"myTable\" class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => sorting(\"contract_name\")}>Contract Name</th>\r\n              <th onClick={() => sorting(\"contract_length\")}>Contract Length</th>\r\n              <th onClick={() => sorting(\"contract_value\")}>Contract Value</th>\r\n              <th onClick={() => sorting(\"description\")}>Contract Description</th>\r\n              <th onClick={() => sorting(\"progamming_language\")}>Programming Language</th>\r\n              <th onClick={() => sorting(\"location\")}>Location</th>\r\n              <th onClick={() => sorting(\"date\")}>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((d) => (\r\n              <tr key={d.id}>\r\n                <td>{d.contract_name}</td>\r\n                <td>{d.contract_length}</td>\r\n                <td>{d.contract_value}</td>\r\n                <td>{d.description}</td>\r\n                <td>{d.progamming_language}</td>\r\n                <td>{d.location}</td>\r\n                <td>{d.date}</td>\r\n              </tr>\r\n\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport  { SortTable };"]},"metadata":{},"sourceType":"module"}