{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\frontend\\\\src\\\\Components\\\\ContractPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './Other/Header';\nimport Contracts from './Other/Contracts';\nimport AddContract from './Other/AddContract';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Menu from './Other/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContractPage() {\n  _s();\n\n  const [showAddContract, setShowAddContract] = useState(false);\n  const [contracts, setContracts] = useState([]);\n  const [showAllContracts, setShowAllContracts] = useState(true);\n  const [showOpenContracts, setShowOpenContracts] = useState(false);\n  const [showClosedContracts, setShowClosedContracts] = useState(false);\n  useEffect(() => {\n    const getContracts = async () => {\n      const contractsFromServer = await fetchContracts();\n      setContracts(contractsFromServer);\n    };\n\n    getContracts();\n  }, []); //Fetch Contracts\n\n  const fetchContracts = async () => {\n    const res = await fetch('http://localhost:5000/contracts');\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchContract = async id => {\n    const res = await fetch(`http://localhost:5000/contracts/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Contract\n\n\n  const addContract = async contract => {\n    const res = await fetch('http://localhost:5000/contracts', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(contract)\n    });\n    const data = await res.json();\n    setContracts([...contracts, data]);\n  }; // Delete Contract\n\n\n  const deleteContract = async id => {\n    await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'DELETE'\n    });\n    setContracts(contracts.filter(contract => contract.id !== id));\n  }; // Expand Contract\n\n\n  const expandContract = async id => {\n    const contractToExpand = await fetchContract(id);\n    const updContract = { ...contractToExpand,\n      expandContract: !contractToExpand.expandContract\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updContract)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      expandContract: data.expandContract\n    } : contract));\n  };\n\n  const showDevelopers = async id => {\n    const devsToShow = await fetchContract(id);\n    const showDev = { ...devsToShow,\n      showDevs: !devsToShow.showDevs\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(showDev)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      showDevs: data.showDevs\n    } : contract));\n  }; // Toggle Reminder\n\n\n  const toggleExpand = async id => {\n    const contractToToggle = await fetchContract(id);\n    const updContract = { ...contractToToggle,\n      expandContract: !contractToToggle.expandContract\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updContract)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      expandContract: data.expandContract\n    } : contract));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddContract(!showAddContract),\n        showAdd: showAddContract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), showAddContract && /*#__PURE__*/_jsxDEV(AddContract, {\n        onAdd: addContract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Listed Contracts\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        all: () => {\n          setShowAllContracts(true);\n          setShowOpenContracts(false);\n          setShowClosedContracts(false);\n        },\n        open: () => {\n          setShowAllContracts(false);\n          setShowOpenContracts(true);\n          setShowClosedContracts(false);\n        },\n        closed: () => {\n          setShowAllContracts(false);\n          setShowOpenContracts(false);\n          setShowClosedContracts(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), contracts.length > 0 ? /*#__PURE__*/_jsxDEV(Contracts, {\n        contracts: contracts,\n        onExpand: expandContract,\n        all: showAllContracts,\n        open: showOpenContracts,\n        closed: showClosedContracts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 34\n      }, this) : 'No Contracts to Show']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContractPage, \"0kGBBsVfYPZ9ea8i+1jh0+M3Guo=\");\n\n_c = ContractPage;\nexport default ContractPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractPage\");","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/frontend/src/Components/ContractPage.js"],"names":["useState","useEffect","Header","Contracts","AddContract","BrowserRouter","Router","Route","Menu","ContractPage","showAddContract","setShowAddContract","contracts","setContracts","showAllContracts","setShowAllContracts","showOpenContracts","setShowOpenContracts","showClosedContracts","setShowClosedContracts","getContracts","contractsFromServer","fetchContracts","res","fetch","data","json","fetchContract","id","addContract","contract","method","headers","body","JSON","stringify","deleteContract","filter","expandContract","contractToExpand","updContract","map","showDevelopers","devsToShow","showDev","showDevs","toggleExpand","contractToToggle","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './Other/Header'\nimport Contracts from './Other/Contracts'\nimport AddContract from './Other/AddContract'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Menu from './Other/Menu'\n\nfunction ContractPage() {\n  const [showAddContract, setShowAddContract] = useState(false)\n  const [contracts, setContracts] = useState([])\n  const [showAllContracts, setShowAllContracts] = useState(true)\n  const [showOpenContracts, setShowOpenContracts] = useState(false)\n  const [showClosedContracts, setShowClosedContracts] = useState(false)\n\n  useEffect(() => {\n    const getContracts = async () => {\n      const contractsFromServer = await fetchContracts()\n      setContracts(contractsFromServer)\n    }\n\n    getContracts()\n  }, [])\n\n  //Fetch Contracts\n  const fetchContracts = async () => {\n    const res = await fetch('http://localhost:5000/contracts')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchContract = async (id) => {\n    const res = await fetch(`http://localhost:5000/contracts/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //Add Contract\n  const addContract = async (contract) => {\n    const res = await fetch('http://localhost:5000/contracts', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(contract),\n    })\n\n    const data = await res.json()\n\n    setContracts([...contracts, data])\n\n  }\n\n  // Delete Contract\n  const deleteContract = async (id) => {\n    await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'DELETE',\n    })\n    setContracts(contracts.filter((contract) => contract.id !== id))\n  }\n\n  // Expand Contract\n  const expandContract = async (id) => {\n    const contractToExpand = await fetchContract(id)\n    const updContract = {\n      ...contractToExpand,\n      expandContract: !contractToExpand.expandContract\n    }\n\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updContract)\n    })\n\n    const data = await res.json()\n\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, expandContract: data.expandContract } : contract))\n  }\n\n  const showDevelopers = async (id) => {\n    const devsToShow = await fetchContract(id)\n    const showDev = {\n      ...devsToShow,\n      showDevs: !devsToShow.showDevs\n    }\n\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(showDev)\n    })\n\n    const data = await res.json()\n\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, showDevs: data.showDevs } : contract))\n  }\n\n  // Toggle Reminder\n  const toggleExpand = async (id) => {\n    const contractToToggle = await fetchContract(id)\n    const updContract = {\n      ...contractToToggle,\n      expandContract: !contractToToggle.expandContract\n    }\n\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updContract)\n    })\n\n    const data = await res.json()\n\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, expandContract: data.expandContract } : contract))\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddContract(!showAddContract)}\n          showAdd={showAddContract}\n        />\n        {showAddContract && <AddContract onAdd=\n          {addContract} />}\n        <h2>Listed Contracts{' '}</h2>\n        <Menu\n          all= {() => {setShowAllContracts(true);setShowOpenContracts(false);setShowClosedContracts(false)}}\n          open= {() => {setShowAllContracts(false);setShowOpenContracts(true);setShowClosedContracts(false)}}\n          closed= {() => {setShowAllContracts(false);setShowOpenContracts(false);setShowClosedContracts(true)}}\n         >\n        </Menu>\n        \n        {contracts.length > 0 ? (<Contracts contracts={contracts} onExpand={expandContract} all={showAllContracts} open={showOpenContracts} closed={showClosedContracts}\n        />) : ('No Contracts to Show')}\n      </div>\n      \n    </Router>\n  )\n}\n\nexport default ContractPage;"]},"metadata":{},"sourceType":"module"}