{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\group_32\\\\frontend\\\\src\\\\Components\\\\ContractPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './Other/Header';\nimport Contracts from './Other/Contracts';\nimport AddContract from './Other/AddContract';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Menu from './Other/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContractPage() {\n  _s();\n\n  const [showAddContract, setShowAddContract] = useState(false);\n  const [contracts, setContracts] = useState([]);\n  const [showAllContracts, setShowAllContracts] = useState(true);\n  const [showOpenContracts, setShowOpenContracts] = useState(false);\n  const [showClosedContracts, setShowClosedContracts] = useState(false);\n  useEffect(() => {\n    const getContracts = async () => {\n      const contractsFromServer = await fetchContracts();\n      setContracts(contractsFromServer);\n    };\n\n    getContracts();\n  }, []); //Fetch Contracts\n\n  const fetchContracts = async contract => {\n    const res = await fetch('http://localhost:5000/contracts');\n    const data = await res.json();\n    return data; // let data = null\n    // const requestOpt = {\n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // }\n    // async function fetchFunc() {\n    //     return await fetch('http://127.0.0.1:5000/comGetContracts', requestOpt)\n    //     .then(response => response.json())\n    //     .catch(error => console.log(error));\n    // }\n    // (async () => {\n    //     data = await fetchFunc();\n    // })()\n    // return data\n  };\n\n  const fetchContract = async id => {\n    // FIXME: What id is this???\n    const res = await fetch(`http://localhost:5000/contracts/${id}`);\n    const data = await res.json();\n    return data; // let data = null\n    // const requestOpt = {\n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // }\n    // async function fetchFunc() {\n    //     return await fetch(`http://127.0.0.1:5000/getContract/${id}`, requestOpt)\n    //     .then(response => response.json())\n    //     .catch(error => console.log(error));\n    // }\n    // (async () => {\n    //     data = await fetchFunc();\n    // })()\n    // return data\n  }; //Add Contract\n\n\n  const addContract = async contract => {\n    let data = null;\n    const requestOpt = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'contract_name': contract.contractName,\n        'contract_length': contract.contractLength,\n        'contract_value': contract.contractValue,\n        'contract_description': contract.contractDes,\n        'programming_language': contract.contractLan,\n        'location': contract.location\n      })\n    };\n\n    async function fetchFunc() {\n      return await fetch('http://127.0.0.1:5000/createContract', requestOpt).then(response => response.json()).catch(error => console.log(error));\n    }\n\n    (async () => {\n      data = await fetchFunc();\n    })();\n\n    setContracts([...contracts, data]);\n  };\n\n  const showDevelopers = async id => {\n    const devsToShow = await fetchContract(id);\n    const showDev = { ...devsToShow,\n      showDevs: !devsToShow.showDevs\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(showDev)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      showDevs: data.showDevs\n    } : contract));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddContract(!showAddContract),\n        showAdd: showAddContract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), showAddContract && /*#__PURE__*/_jsxDEV(AddContract, {\n        onAdd: addContract,\n        showAdd: () => setShowAddContract(!showAddContract)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }, this), !showAddContract ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Listed Contracts\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          all: () => {\n            setShowAllContracts(true);\n            setShowOpenContracts(false);\n            setShowClosedContracts(false);\n          },\n          open: () => {\n            setShowAllContracts(false);\n            setShowOpenContracts(true);\n            setShowClosedContracts(false);\n          },\n          closed: () => {\n            setShowAllContracts(false);\n            setShowOpenContracts(false);\n            setShowClosedContracts(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 43\n        }, this), contracts.length > 0 ? /*#__PURE__*/_jsxDEV(Contracts, {\n          contracts: contracts,\n          all: showAllContracts,\n          open: showOpenContracts,\n          closed: showClosedContracts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 34\n        }, this) : 'No Contracts to Show']\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContractPage, \"0kGBBsVfYPZ9ea8i+1jh0+M3Guo=\");\n\n_c = ContractPage;\nexport default ContractPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractPage\");","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/group_32/frontend/src/Components/ContractPage.js"],"names":["useState","useEffect","Header","Contracts","AddContract","BrowserRouter","Router","Route","Menu","ContractPage","showAddContract","setShowAddContract","contracts","setContracts","showAllContracts","setShowAllContracts","showOpenContracts","setShowOpenContracts","showClosedContracts","setShowClosedContracts","getContracts","contractsFromServer","fetchContracts","contract","res","fetch","data","json","fetchContract","id","addContract","requestOpt","method","headers","body","JSON","stringify","contractName","contractLength","contractValue","contractDes","contractLan","location","fetchFunc","then","response","catch","error","console","log","showDevelopers","devsToShow","showDev","showDevs","map","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from './Other/Header'\r\nimport Contracts from './Other/Contracts'\r\nimport AddContract from './Other/AddContract'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Menu from './Other/Menu'\r\n\r\n\r\nfunction ContractPage() {\r\n  const [showAddContract, setShowAddContract] = useState(false)\r\n  const [contracts, setContracts] = useState([])\r\n  const [showAllContracts, setShowAllContracts] = useState(true)\r\n  const [showOpenContracts, setShowOpenContracts] = useState(false)\r\n  const [showClosedContracts, setShowClosedContracts] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getContracts = async () => {\r\n      const contractsFromServer = await fetchContracts()\r\n      setContracts(contractsFromServer)\r\n    }\r\n\r\n    getContracts()\r\n  }, [])\r\n\r\n  //Fetch Contracts\r\n  const fetchContracts = async (contract) => {\r\n\r\n    const res = await fetch('http://localhost:5000/contracts')\r\n    const data = await res.json()\r\n\r\n    return data\r\n\r\n\r\n    // let data = null\r\n    // const requestOpt = {\r\n    //   method: 'GET',\r\n    //   headers: {'Content-Type': 'application/json'},\r\n    // }\r\n    // async function fetchFunc() {\r\n    //     return await fetch('http://127.0.0.1:5000/comGetContracts', requestOpt)\r\n    //     .then(response => response.json())\r\n    //     .catch(error => console.log(error));\r\n    // }\r\n    // (async () => {\r\n    //     data = await fetchFunc();\r\n    // })()\r\n\r\n    // return data\r\n  }\r\n\r\n  const fetchContract = async (id) => { // FIXME: What id is this???\r\n\r\n    const res = await fetch(`http://localhost:5000/contracts/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n    // let data = null\r\n    // const requestOpt = {\r\n    //   method: 'GET',\r\n    //   headers: {'Content-Type': 'application/json'},\r\n    // }\r\n    // async function fetchFunc() {\r\n    //     return await fetch(`http://127.0.0.1:5000/getContract/${id}`, requestOpt)\r\n    //     .then(response => response.json())\r\n    //     .catch(error => console.log(error));\r\n    // }\r\n    // (async () => {\r\n    //     data = await fetchFunc();\r\n    // })()\r\n\r\n    // return data\r\n  }\r\n\r\n  //Add Contract\r\n  const addContract = async (contract) => {\r\n    let data = null\r\n    const requestOpt = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n          'contract_name':contract.contractName,\r\n          'contract_length':contract.contractLength,\r\n          'contract_value':contract.contractValue,\r\n          'contract_description':contract.contractDes,\r\n          'programming_language':contract.contractLan,\r\n          'location':contract.location\r\n      }),\r\n    }\r\n    async function fetchFunc() {\r\n        return await fetch('http://127.0.0.1:5000/createContract', requestOpt)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n    }\r\n    (async () => {\r\n        data = await fetchFunc();\r\n    })()\r\n\r\n    setContracts([...contracts, data])\r\n  }\r\n\r\n  const showDevelopers = async (id) => {\r\n    const devsToShow = await fetchContract(id)\r\n    const showDev = {\r\n      ...devsToShow,\r\n      showDevs: !devsToShow.showDevs\r\n    }\r\n\r\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(showDev)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, showDevs: data.showDevs } : contract))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Header\r\n          onAdd={() => setShowAddContract(!showAddContract)}\r\n          showAdd={showAddContract}\r\n        />\r\n        {showAddContract && <AddContract onAdd=\r\n          {addContract} showAdd={() => setShowAddContract(!showAddContract)}/>}\r\n        {!showAddContract ? (\r\n          <><h2>Listed Contracts{' '}</h2><Menu\r\n            all={() => { setShowAllContracts(true); setShowOpenContracts(false); setShowClosedContracts(false) } }\r\n            open={() => { setShowAllContracts(false); setShowOpenContracts(true); setShowClosedContracts(false) } }\r\n            closed={() => { setShowAllContracts(false); setShowOpenContracts(false); setShowClosedContracts(true) } }\r\n          >\r\n          </Menu>\r\n        {contracts.length > 0 ? (<Contracts contracts={contracts} all={showAllContracts} open={showOpenContracts} closed={showClosedContracts}\r\n        />) : ('No Contracts to Show')}</>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        \r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContractPage;"]},"metadata":{},"sourceType":"module"}