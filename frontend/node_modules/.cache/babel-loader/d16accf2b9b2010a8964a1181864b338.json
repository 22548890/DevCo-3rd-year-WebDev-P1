{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\frontend\\\\src\\\\Components\\\\DevContracts.js\";\nimport React from 'react';\nimport JsonData from '../contract.json';\nimport \"./CSS/Table.css\";\nimport ReactDOM from 'react-dom';\nimport axios from 'axios'; // const requestOpt = {\n//   method: 'GET',\n//   headers: { 'Content-Type': 'application/json' },\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchFakeJson = async () => {\n  const response = await fetch('http://127.0.0.1:5000/getContracts');\n  const json = await response.json();\n  return json;\n};\n\nclass DevContracts extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sortBy: null,\n      sortDirection: true,\n      data: [],\n      isLoading: true,\n      error: null\n    };\n\n    this.reset = () => {\n      this.setState({\n        isLoading: true,\n        error: null\n      });\n      window.scrollTo(0, 0);\n      this.textbox.value = '';\n      fetchFakeJson().then(data => {\n        this.setState({\n          data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.loadCustomData = () => {\n      // let json;\n      // const requestOpt = {\n      //   method: 'GET',\n      //   headers: {'Content-Type': 'application/json'},\n      //   }\n      //   async function fetchFunc() {\n      //       return await fetch('http://127.0.0.1:5000/getContracts', requestOpt)\n      //       .then(response => response.json())\n      //       .catch(error => console.log(error));\n      //   }\n      //   (async () => {\n      //       json = await fetchFunc();\n      //   })()\n      //   if (json.length > 0) {\n      //     this.setState({ data: json });\n      //   } \n      const requestOpt = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      async function fetchFunc() {\n        return await fetch('http://127.0.0.1:5000/getContracts', requestOpt).then(response => response.json()).catch(error => console.log(error));\n      }\n\n      (async () => {\n        let json = await fetchFunc();\n        this.setState({\n          data: json\n        });\n      })();\n    };\n\n    this.getHeaders = data => {\n      const headers = data.reduce((headers, item) => {\n        const _headers = Object.keys(item).reduce((_headers, header) => ({ ..._headers,\n          [header]: null\n        }), {});\n\n        return { ...headers,\n          ..._headers\n        };\n      }, {});\n      return Object.keys(headers);\n    };\n\n    this.fillCells = headers => item => Object.assign({}, headers.reduce((_headers, header) => ({ ..._headers,\n      [header]: null\n    }), {}), item);\n\n    this.sortBy = sortBy => e => {\n      e.preventDefault();\n      this.setState(state => ({\n        sortBy,\n        sortDirection: state.sortBy === sortBy ? !state.sortDirection : true\n      }));\n    };\n\n    this.sortDataBy = (sortBy, direction) => (a, b) => {\n      if (direction) {\n        return a[sortBy] > b[sortBy] ? 1 : a[sortBy] < b[sortBy] ? -1 : 0;\n      }\n\n      return a[sortBy] > b[sortBy] ? -1 : a[sortBy] < b[sortBy] ? 1 : 0;\n    };\n  }\n\n  async componentDidMount() {\n    const data = await fetchFakeJson();\n    this.setState({\n      data,\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortDirection,\n      isLoading,\n      error\n    } = this.state;\n    const headers = this.getHeaders(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"responsive-table\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"dynamic-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"sortable\",\n            style: {\n              display: isLoading ? 'none' : 'inherit'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: sortBy === header ? sortDirection ? 'ascendent_sort' : 'descendent_sort' : '',\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: this.sortBy(header),\n                    children: header.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 126\n                  }, this)\n                }, header, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.sort(this.sortDataBy(sortBy, sortDirection)).map(this.fillCells(headers)).map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.values(item).map((value, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: value\n                }, `${rowIndex}.${cellIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        onClick: this.reset,\n        children: \"Reset Table (random data)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        onClick: this.loadCustomData,\n        children: \"Load custom data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"custom-data\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"customData\",\n          id: \"textbox\",\n          ref: el => {\n            this.textbox = el;\n          },\n          cols: \"30\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this);\n  }\n\n} // const dynamicTable = document.getElementById('root');\n// ReactDOM.render(<App />, dynamicTable);\n\n\nexport default DevContracts;","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/frontend/src/Components/DevContracts.js"],"names":["React","JsonData","ReactDOM","axios","fetchFakeJson","response","fetch","json","DevContracts","Component","state","sortBy","sortDirection","data","isLoading","error","reset","setState","window","scrollTo","textbox","value","then","loadCustomData","requestOpt","method","headers","fetchFunc","catch","console","log","getHeaders","reduce","item","_headers","Object","keys","header","fillCells","assign","e","preventDefault","sortDataBy","direction","a","b","componentDidMount","render","display","map","toUpperCase","sort","rowIndex","values","cellIndex","el"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport JsonData from '../contract.json'\r\nimport \"./CSS/Table.css\"\r\nimport ReactDOM from 'react-dom'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n// const requestOpt = {\r\n//   method: 'GET',\r\n//   headers: { 'Content-Type': 'application/json' },\r\n// }\r\n\r\n\r\nconst fetchFakeJson = async () => {\r\n  const response = await fetch('http://127.0.0.1:5000/getContracts');\r\n  const json = await response.json();\r\n\r\n  return json;\r\n}\r\n\r\n\r\nclass DevContracts extends React.Component {\r\n  state = {\r\n    sortBy: null,\r\n    sortDirection: true,\r\n    data: [],\r\n    isLoading: true,\r\n    error: null,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchFakeJson();\r\n\r\n    this.setState({ data, isLoading: false });\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ isLoading: true, error: null });\r\n\r\n    window.scrollTo(0, 0);\r\n\r\n    this.textbox.value = '';\r\n\r\n    fetchFakeJson().then(data => {\r\n      this.setState({ data, isLoading: false });\r\n    })\r\n  }\r\n\r\n  loadCustomData = () => {\r\n    // let json;\r\n    // const requestOpt = {\r\n    //   method: 'GET',\r\n    //   headers: {'Content-Type': 'application/json'},\r\n    //   }\r\n    //   async function fetchFunc() {\r\n    //       return await fetch('http://127.0.0.1:5000/getContracts', requestOpt)\r\n    //       .then(response => response.json())\r\n    //       .catch(error => console.log(error));\r\n    //   }\r\n    //   (async () => {\r\n    //       json = await fetchFunc();\r\n    //   })()\r\n\r\n\r\n    //   if (json.length > 0) {\r\n    //     this.setState({ data: json });\r\n    //   } \r\n\r\n\r\n    const requestOpt = {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n\r\n    }\r\n    async function fetchFunc() {\r\n      return await fetch('http://127.0.0.1:5000/getContracts', requestOpt)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n    }\r\n    (async () => {\r\n      let json = await fetchFunc();\r\n      this.setState({ data: json });\r\n    })()\r\n  }\r\n\r\n\r\n\r\ngetHeaders = data => {\r\n  const headers = data.reduce((headers, item) => {\r\n    const _headers = Object.keys(item).reduce((_headers, header) => ({ ..._headers, [header]: null }), {});\r\n\r\n    return {\r\n      ...headers,\r\n      ..._headers,\r\n    };\r\n  }, {});\r\n\r\n\r\n  return Object.keys(headers);\r\n};\r\n\r\nfillCells = headers => item => Object.assign({}, headers.reduce((_headers, header) => ({ ..._headers, [header]: null }), {}), item);\r\n\r\nsortBy = sortBy => e => {\r\n  e.preventDefault();\r\n\r\n  this.setState(state => ({ sortBy, sortDirection: state.sortBy === sortBy ? !state.sortDirection : true }));\r\n}\r\n\r\nsortDataBy = (sortBy, direction) => (a, b) => {\r\n  if (direction) {\r\n    return a[sortBy] > b[sortBy] ? 1 : (a[sortBy] < b[sortBy] ? -1 : 0);\r\n  }\r\n\r\n  return a[sortBy] > b[sortBy] ? -1 : a[sortBy] < b[sortBy] ? 1 : 0;\r\n};\r\n\r\nrender() {\r\n  const { data, sortBy, sortDirection, isLoading, error } = this.state;\r\n\r\n  const headers = this.getHeaders(data);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"responsive-table\">\r\n        <div id=\"dynamic-table\">\r\n          <table id=\"sortable\" style={{ display: isLoading ? 'none' : 'inherit' }}>\r\n            <thead>\r\n              <tr>\r\n                {headers.map(header => (\r\n                  <th key={header} className={sortBy === header ? sortDirection ? 'ascendent_sort' : 'descendent_sort' : ''}><a onClick={this.sortBy(header)}>{header.toUpperCase()}</a></th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.sort(this.sortDataBy(sortBy, sortDirection)).map(this.fillCells(headers)).map((item, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  {Object.values(item).map((value, cellIndex) => (\r\n                    <td key={`${rowIndex}.${cellIndex}`}>{value}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <button class=\"btn\" onClick={this.reset}>Reset Table (random data)</button>{' '}\r\n      <button class=\"btn\" onClick={this.loadCustomData}>Load custom data</button>\r\n\r\n      <div class=\"custom-data\">\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <textarea name=\"customData\" id=\"textbox\" ref={el => { this.textbox = el }} cols=\"30\" rows=\"10\"></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\n// const dynamicTable = document.getElementById('root');\r\n// ReactDOM.render(<App />, dynamicTable);\r\nexport default DevContracts;\r\n"]},"metadata":{},"sourceType":"module"}