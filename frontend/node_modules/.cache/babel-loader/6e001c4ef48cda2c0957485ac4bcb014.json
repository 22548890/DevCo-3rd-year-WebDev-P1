{"ast":null,"code":"var _jsxFileName = \"/home/chris/data/cs334/group_32/frontend/src/Components/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute(_ref) {\n  let {\n    component: Component,\n    ...restOfProps\n  } = _ref;\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n  console.log(\"this\", isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 62\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/chris/data/cs334/group_32/frontend/src/Components/ProtectedRoute.js"],"names":["React","Navigate","Route","ProtectedRoute","component","Component","restOfProps","isAuthenticated","localStorage","getItem","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,SAASC,cAAT,OAAkE;AAAA,MAA1C;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAA0C;AAC9D,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,eAApB;AAEA,sBACI,QAAC,KAAD,OACQD,WADR;AAEI,IAAA,MAAM,EAAGM,KAAD,IACJL,eAAe,gBAAG,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHrD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KAZQT,c;AAcT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Navigate, Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\n    const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n    console.log(\"this\", isAuthenticated);\n\n    return (\n        <Route\n            {...restOfProps}\n            render={(props) =>\n                isAuthenticated ? <Component {...props} /> : <Navigate to=\"/login\" />\n            }\n        />\n    );\n}\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}