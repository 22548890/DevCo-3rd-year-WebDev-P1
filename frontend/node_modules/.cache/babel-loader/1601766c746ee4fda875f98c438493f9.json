{"ast":null,"code":"var _jsxFileName = \"/home/chris/data/cs334/group_32/frontend/src/Components/ContractPage.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './Other/Header';\nimport Contracts from './Other/Contracts';\nimport AddContract from './Other/AddContract';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Menu from './Other/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContractPage() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [showAddContract, setShowAddContract] = useState(false);\n  const [contracts, setContracts] = useState([]);\n  const [showAllContracts, setShowAllContracts] = useState(true);\n  const [showOpenContracts, setShowOpenContracts] = useState(false);\n  const [showClosedContracts, setShowClosedContracts] = useState(false); // useEffect(() => {\n  //   const getContracts = async () => {\n  //     const contractsFromServer = await fetchContracts()\n  //     setContracts(contractsFromServer)\n  //   }\n  //   getContracts()\n  // }, [])\n  //Fetch Contracts\n\n  const fetchContracts = async contract => {\n    const res = await fetch('http://localhost:5000/contracts');\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchContract = async id => {\n    // FIXME: What id is this???\n    const res = await fetch(`http://localhost:5000/contracts/${id}`);\n    const data = await res.json();\n    return data; // let data = null\n    // const requestOpt = {\n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // }\n    // async function fetchFunc() {\n    //     return await fetch(`http://127.0.0.1:5000/getContract/${id}`, requestOpt)\n    //     .then(response => response.json())\n    //     .catch(error => console.log(error));\n    // }\n    // (async () => {\n    //     data = await fetchFunc();\n    // })()\n    // return data\n  }; //Add Contract\n\n\n  const addContract = async contract => {\n    _s();\n\n    // let data = null\n    // const requestOpt = {\n    //   method: 'POST',\n    //   headers: {'Content-Type': 'application/json'},\n    //   body: JSON.stringify({\n    //       'name':contract.contractName,\n    //       'length':contract.contractLength,\n    //       'value':contract.contractValue,\n    //       'description':contract.contractDes,\n    //       'programming_language':contract.contractLan,\n    //       'location':contract.location,\n    //       'open':contract.open\n    //   }),\n    // }\n    // async function fetchFunc() {\n    //     return await fetch('http://127.0.0.1:5000/createContract', requestOpt)\n    //     .then(response => response.json())\n    //     .catch(error => console.log(error));\n    // }\n    // (async () => {\n    //     data = await fetchFunc();\n    // })()\n    const [data, setData] = useState([]);\n    const requestOpt = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': contract.contractName,\n        'length': contract.contractLength,\n        'value': contract.contractValue,\n        'description': contract.contractDes,\n        'programming_language': contract.contractLan,\n        'location': contract.location,\n        'open': contract.open\n      })\n    };\n    fetch('http://127.0.0.1:5000/createContract', requestOpt).then(response => response.json()).then(response => setData(response)).catch(error => console.log(error));\n    alert(data);\n    setContracts([...contracts, data]);\n  };\n\n  _s(addContract, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n  const showDevelopers = async id => {\n    const devsToShow = await fetchContract(id);\n    const showDev = { ...devsToShow,\n      showDevs: !devsToShow.showDevs\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(showDev)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      showDevs: data.showDevs\n    } : contract));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddContract(!showAddContract),\n        showAdd: showAddContract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), showAddContract && /*#__PURE__*/_jsxDEV(AddContract, {\n        onAdd: addContract,\n        showAdd: () => setShowAddContract(!showAddContract)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }, this), !showAddContract ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Listed Contracts\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          all: () => {\n            setShowAllContracts(true);\n            setShowOpenContracts(false);\n            setShowClosedContracts(false);\n          },\n          open: () => {\n            setShowAllContracts(false);\n            setShowOpenContracts(true);\n            setShowClosedContracts(false);\n          },\n          closed: () => {\n            setShowAllContracts(false);\n            setShowOpenContracts(false);\n            setShowClosedContracts(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 43\n        }, this), contracts.length > 0 ? /*#__PURE__*/_jsxDEV(Contracts, {\n          contracts: contracts,\n          all: showAllContracts,\n          open: showOpenContracts,\n          closed: showClosedContracts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 34\n        }, this) : 'No Contracts to Show']\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ContractPage, \"12ufNE6foCe3OWvDYcwBg3ZOLJg=\");\n\n_c = ContractPage;\nexport default ContractPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractPage\");","map":{"version":3,"sources":["/home/chris/data/cs334/group_32/frontend/src/Components/ContractPage.js"],"names":["useState","useEffect","Header","Contracts","AddContract","BrowserRouter","Router","Route","Menu","ContractPage","showAddContract","setShowAddContract","contracts","setContracts","showAllContracts","setShowAllContracts","showOpenContracts","setShowOpenContracts","showClosedContracts","setShowClosedContracts","fetchContracts","contract","res","fetch","data","json","fetchContract","id","addContract","setData","requestOpt","method","headers","body","JSON","stringify","contractName","contractLength","contractValue","contractDes","contractLan","location","open","then","response","catch","error","console","log","alert","showDevelopers","devsToShow","showDev","showDevs","map","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './Other/Header'\nimport Contracts from './Other/Contracts'\nimport AddContract from './Other/AddContract'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Menu from './Other/Menu'\n\n\nfunction ContractPage() {\n  const [showAddContract, setShowAddContract] = useState(false)\n  const [contracts, setContracts] = useState([])\n  const [showAllContracts, setShowAllContracts] = useState(true)\n  const [showOpenContracts, setShowOpenContracts] = useState(false)\n  const [showClosedContracts, setShowClosedContracts] = useState(false)\n\n  // useEffect(() => {\n  //   const getContracts = async () => {\n  //     const contractsFromServer = await fetchContracts()\n  //     setContracts(contractsFromServer)\n  //   }\n\n  //   getContracts()\n  // }, [])\n\n  //Fetch Contracts\n  const fetchContracts = async (contract) => {\n\n    const res = await fetch('http://localhost:5000/contracts')\n    const data = await res.json()\n\n    return data\n  }\n  \n\n\n  const fetchContract = async (id) => { // FIXME: What id is this???\n\n    const res = await fetch(`http://localhost:5000/contracts/${id}`)\n    const data = await res.json()\n\n    return data\n    // let data = null\n    // const requestOpt = {\n    //   method: 'GET',\n    //   headers: {'Content-Type': 'application/json'},\n    // }\n    // async function fetchFunc() {\n    //     return await fetch(`http://127.0.0.1:5000/getContract/${id}`, requestOpt)\n    //     .then(response => response.json())\n    //     .catch(error => console.log(error));\n    // }\n    // (async () => {\n    //     data = await fetchFunc();\n    // })()\n\n    // return data\n  }\n\n  //Add Contract\n  const addContract = async (contract) => {\n    // let data = null\n    // const requestOpt = {\n    //   method: 'POST',\n    //   headers: {'Content-Type': 'application/json'},\n    //   body: JSON.stringify({\n    //       'name':contract.contractName,\n    //       'length':contract.contractLength,\n    //       'value':contract.contractValue,\n    //       'description':contract.contractDes,\n    //       'programming_language':contract.contractLan,\n    //       'location':contract.location,\n    //       'open':contract.open\n    //   }),\n    // }\n    // async function fetchFunc() {\n    //     return await fetch('http://127.0.0.1:5000/createContract', requestOpt)\n    //     .then(response => response.json())\n    //     .catch(error => console.log(error));\n    // }\n    // (async () => {\n    //     data = await fetchFunc();\n    // })()\n    const [data, setData] = useState([]);\n\n    const requestOpt = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          'name':contract.contractName,\n          'length':contract.contractLength,\n          'value':contract.contractValue,\n          'description':contract.contractDes,\n          'programming_language':contract.contractLan,\n          'location':contract.location,\n          'open':contract.open\n      }),\n    }\n    fetch('http://127.0.0.1:5000/createContract', requestOpt)\n    .then(response => response.json())\n    .then(response => setData(response))\n    .catch(error => console.log(error));\n\n    alert(data);\n\n    setContracts([...contracts, data])\n  }\n\n  const showDevelopers = async (id) => {\n    const devsToShow = await fetchContract(id)\n    const showDev = {\n      ...devsToShow,\n      showDevs: !devsToShow.showDevs\n    }\n\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(showDev)\n    })\n\n    const data = await res.json()\n\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, showDevs: data.showDevs } : contract))\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddContract(!showAddContract)}\n          showAdd={showAddContract}\n        />\n        {showAddContract && <AddContract onAdd=\n          {addContract} showAdd={() => setShowAddContract(!showAddContract)}/>}\n        {!showAddContract ? (\n          <><h2>Listed Contracts{' '}</h2><Menu\n            all={() => { setShowAllContracts(true); setShowOpenContracts(false); setShowClosedContracts(false) } }\n            open={() => { setShowAllContracts(false); setShowOpenContracts(true); setShowClosedContracts(false) } }\n            closed={() => { setShowAllContracts(false); setShowOpenContracts(false); setShowClosedContracts(true) } }\n          >\n          </Menu>\n        {contracts.length > 0 ? (<Contracts contracts={contracts} all={showAllContracts} open={showOpenContracts} closed={showClosedContracts}\n        />) : ('No Contracts to Show')}</>\n        ) : (\n          <p></p>\n        )}\n        \n      </div>\n      \n    </Router>\n  )\n}\n\nexport default ContractPage;"]},"metadata":{},"sourceType":"module"}