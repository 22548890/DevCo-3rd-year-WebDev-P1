{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\group_32\\\\frontend\\\\src\\\\Components\\\\ContractPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './Other/Header';\nimport Contracts from './Other/Contracts';\nimport AddContract from './Other/AddContract';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Menu from './Other/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContractPage() {\n  _s();\n\n  const [showAddContract, setShowAddContract] = useState(false);\n  const [contracts, setContracts] = useState([]);\n  const [showAllContracts, setShowAllContracts] = useState(true);\n  const [showOpenContracts, setShowOpenContracts] = useState(false);\n  const [showClosedContracts, setShowClosedContracts] = useState(false);\n  useEffect(() => {\n    const getContracts = async () => {\n      const contractsFromServer = await fetchContracts();\n      setContracts(contractsFromServer);\n    };\n\n    getContracts();\n  }, []); //Fetch Contracts\n\n  const fetchContracts = async () => {\n    const res = await fetch('http://localhost:5000/contracts');\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchContract = async id => {\n    const res = await fetch(`http://localhost:5000/contracts/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Contract\n\n\n  const addContract = async contract => {\n    let data = null;\n    const requestOpt = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'contract_name': contract.contractName,\n        'contract_length': contract.contractLength,\n        'contract_value': contract.contractValue,\n        'contract_description': contract.contractDes,\n        'programming_language': contract.contractLan,\n        'location': contract.location\n      })\n    };\n\n    async function fetchFunc() {\n      return await fetch('http://127.0.0.1:5000/createContract', requestOpt).then(response => response.json()).catch(error => console.log(error));\n    }\n\n    (async () => {\n      data = await fetchFunc();\n    })();\n\n    setContracts([...contracts, data]);\n  }; // Delete Contract\n\n\n  const deleteContract = async id => {\n    await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'DELETE'\n    });\n    setContracts(contracts.filter(contract => contract.id !== id));\n  }; // Expand Contract\n\n\n  const expandContract = async id => {\n    const contractToExpand = await fetchContract(id);\n    const updContract = { ...contractToExpand,\n      expandContract: !contractToExpand.expandContract\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updContract)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      expandContract: data.expandContract\n    } : contract));\n  };\n\n  const showDevelopers = async id => {\n    const devsToShow = await fetchContract(id);\n    const showDev = { ...devsToShow,\n      showDevs: !devsToShow.showDevs\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(showDev)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      showDevs: data.showDevs\n    } : contract));\n  }; // Toggle Reminder\n\n\n  const toggleExpand = async id => {\n    const contractToToggle = await fetchContract(id);\n    const updContract = { ...contractToToggle,\n      expandContract: !contractToToggle.expandContract\n    };\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updContract)\n    });\n    const data = await res.json();\n    setContracts(contracts.map(contract => contract.id === id ? { ...contract,\n      expandContract: data.expandContract\n    } : contract));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContractPage, \"0kGBBsVfYPZ9ea8i+1jh0+M3Guo=\");\n\n_c = ContractPage;\nexport default ContractPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractPage\");","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/group_32/frontend/src/Components/ContractPage.js"],"names":["useState","useEffect","Header","Contracts","AddContract","BrowserRouter","Router","Route","Menu","ContractPage","showAddContract","setShowAddContract","contracts","setContracts","showAllContracts","setShowAllContracts","showOpenContracts","setShowOpenContracts","showClosedContracts","setShowClosedContracts","getContracts","contractsFromServer","fetchContracts","res","fetch","data","json","fetchContract","id","addContract","contract","requestOpt","method","headers","body","JSON","stringify","contractName","contractLength","contractValue","contractDes","contractLan","location","fetchFunc","then","response","catch","error","console","log","deleteContract","filter","expandContract","contractToExpand","updContract","map","showDevelopers","devsToShow","showDev","showDevs","toggleExpand","contractToToggle"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from './Other/Header'\r\nimport Contracts from './Other/Contracts'\r\nimport AddContract from './Other/AddContract'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Menu from './Other/Menu'\r\n\r\n\r\nfunction ContractPage() {\r\n  const [showAddContract, setShowAddContract] = useState(false)\r\n  const [contracts, setContracts] = useState([])\r\n  const [showAllContracts, setShowAllContracts] = useState(true)\r\n  const [showOpenContracts, setShowOpenContracts] = useState(false)\r\n  const [showClosedContracts, setShowClosedContracts] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getContracts = async () => {\r\n      const contractsFromServer = await fetchContracts()\r\n      setContracts(contractsFromServer)\r\n    }\r\n\r\n    getContracts()\r\n  }, [])\r\n\r\n  //Fetch Contracts\r\n  const fetchContracts = async () => {\r\n    const res = await fetch('http://localhost:5000/contracts')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  const fetchContract = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/contracts/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  //Add Contract\r\n  const addContract = async (contract) => {\r\n    let data = null\r\n    const requestOpt = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n          'contract_name':contract.contractName,\r\n          'contract_length':contract.contractLength,\r\n          'contract_value':contract.contractValue,\r\n          'contract_description':contract.contractDes,\r\n          'programming_language':contract.contractLan,\r\n          'location':contract.location\r\n      }),\r\n    }\r\n    async function fetchFunc() {\r\n        return await fetch('http://127.0.0.1:5000/createContract', requestOpt)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n    }\r\n    (async () => {\r\n        data = await fetchFunc();\r\n    })()\r\n\r\n    setContracts([...contracts, data])\r\n  }\r\n\r\n\r\n  // Delete Contract\r\n  const deleteContract = async (id) => {\r\n    await fetch(`http://localhost:5000/contracts/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    setContracts(contracts.filter((contract) => contract.id !== id))\r\n  }\r\n\r\n  // Expand Contract\r\n  const expandContract = async (id) => {\r\n    const contractToExpand = await fetchContract(id)\r\n    const updContract = {\r\n      ...contractToExpand,\r\n      expandContract: !contractToExpand.expandContract\r\n    }\r\n\r\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updContract)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, expandContract: data.expandContract } : contract))\r\n  }\r\n\r\n  const showDevelopers = async (id) => {\r\n    const devsToShow = await fetchContract(id)\r\n    const showDev = {\r\n      ...devsToShow,\r\n      showDevs: !devsToShow.showDevs\r\n    }\r\n\r\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(showDev)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, showDevs: data.showDevs } : contract))\r\n  }\r\n\r\n  // Toggle Reminder\r\n  const toggleExpand = async (id) => {\r\n    const contractToToggle = await fetchContract(id)\r\n    const updContract = {\r\n      ...contractToToggle,\r\n      expandContract: !contractToToggle.expandContract\r\n    }\r\n\r\n    const res = await fetch(`http://localhost:5000/contracts/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updContract)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setContracts(contracts.map((contract) => contract.id === id ? { ...contract, expandContract: data.expandContract } : contract))\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n\r\n      \r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default ContractPage;\r\n"]},"metadata":{},"sourceType":"module"}