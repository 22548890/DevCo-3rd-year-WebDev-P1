{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\frontend\\\\src\\\\Components\\\\DevContracts.js\";\nimport React from 'react';\nimport JsonData from '../contract.json';\nimport \"./CSS/Table.css\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst basePath = 'https://gist.githubusercontent.com/adielhercules/de4b9a8da2c85a172a80a74af5d868c0/raw/871d0f2442489ffc3d814fce858b14f2d4cb3892/';\n\nconst gistJson = file => `${basePath}${file}.json`;\n\nconst firstFile = gistJson('first-set');\nconst secondFile = gistJson('second-set');\nconst fakeFiles = [firstFile, secondFile];\n\nconst fetchFakeJson = async () => {\n  const file = Math.floor(2 * Math.random());\n  const response = await fetch(fakeFiles[file]);\n  const json = await response.json();\n  return json;\n};\n\nclass DevContracts extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sortBy: null,\n      sortDirection: true,\n      data: [],\n      isLoading: true,\n      error: null\n    };\n\n    this.reset = () => {\n      this.setState({\n        isLoading: true,\n        error: null\n      });\n      window.scrollTo(0, 0);\n      this.textbox.value = '';\n      fetchFakeJson().then(data => {\n        this.setState({\n          data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.loadCustomData = () => {\n      const jsonText = JsonData.map();\n      let json;\n\n      try {\n        json = JSON.parse(jsonText);\n\n        if (json.length > 0) {\n          this.setState({\n            data: json\n          });\n        } else {\n          this.setState({\n            error: 'Empty collection of data detected'\n          });\n        }\n      } catch (error) {\n        this.setState({\n          error: 'Invalid data. Please validate your data first.'\n        });\n      }\n    };\n\n    this.getHeaders = data => {\n      const headers = data.reduce((headers, item) => {\n        const _headers = Object.keys(item).reduce((_headers, header) => ({ ..._headers,\n          [header]: null\n        }), {});\n\n        return { ...headers,\n          ..._headers\n        };\n      }, {});\n      return Object.keys(headers);\n    };\n\n    this.fillCells = headers => item => Object.assign({}, headers.reduce((_headers, header) => ({ ..._headers,\n      [header]: null\n    }), {}), item);\n\n    this.sortBy = sortBy => e => {\n      e.preventDefault();\n      this.setState(state => ({\n        sortBy,\n        sortDirection: state.sortBy === sortBy ? !state.sortDirection : true\n      }));\n    };\n\n    this.sortDataBy = (sortBy, direction) => (a, b) => {\n      if (direction) {\n        return a[sortBy] > b[sortBy] ? 1 : a[sortBy] < b[sortBy] ? -1 : 0;\n      }\n\n      return a[sortBy] > b[sortBy] ? -1 : a[sortBy] < b[sortBy] ? 1 : 0;\n    };\n  }\n\n  async componentDidMount() {\n    const data = await fetchFakeJson();\n    this.setState({\n      data,\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      data,\n      sortBy,\n      sortDirection,\n      isLoading,\n      error\n    } = this.state;\n    const headers = this.getHeaders(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"responsive-table\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"dynamic-table\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"sortable\",\n            style: {\n              display: isLoading ? 'none' : 'inherit'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: sortBy === header ? sortDirection ? 'ascendent_sort' : 'descendent_sort' : '',\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"javascript:;\",\n                    onClick: this.sortBy(header),\n                    children: header.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 128\n                  }, this)\n                }, header, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.sort(this.sortDataBy(sortBy, sortDirection)).map(this.fillCells(headers)).map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.values(item).map((value, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: value\n                }, `${rowIndex}.${cellIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        onClick: this.reset,\n        children: \"Reset Table (random data)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        onClick: this.loadCustomData,\n        children: \"Load custom data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"custom-data\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"customData\",\n          id: \"textbox\",\n          ref: el => {\n            this.textbox = el;\n          },\n          cols: \"30\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const dynamicTable = document.getElementById('root');\n// ReactDOM.render(<App />, dynamicTable);\n\n\nexport default DevContracts;","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/frontend/src/Components/DevContracts.js"],"names":["React","JsonData","ReactDOM","basePath","gistJson","file","firstFile","secondFile","fakeFiles","fetchFakeJson","Math","floor","random","response","fetch","json","DevContracts","Component","state","sortBy","sortDirection","data","isLoading","error","reset","setState","window","scrollTo","textbox","value","then","loadCustomData","jsonText","map","JSON","parse","length","getHeaders","headers","reduce","item","_headers","Object","keys","header","fillCells","assign","e","preventDefault","sortDataBy","direction","a","b","componentDidMount","render","display","toUpperCase","sort","rowIndex","values","cellIndex","el"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport JsonData from '../contract.json'\r\nimport \"./CSS/Table.css\"\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst basePath = 'https://gist.githubusercontent.com/adielhercules/de4b9a8da2c85a172a80a74af5d868c0/raw/871d0f2442489ffc3d814fce858b14f2d4cb3892/';\r\nconst gistJson = file => `${basePath}${file}.json`;\r\n\r\nconst firstFile = gistJson('first-set');\r\nconst secondFile = gistJson('second-set');\r\nconst fakeFiles = [firstFile, secondFile];\r\n\r\nconst fetchFakeJson = async () => {\r\n  const file = Math.floor(2 * Math.random());\r\n\r\n  const response = await fetch(fakeFiles[file]);\r\n  const json = await response.json();\r\n  \r\n  return json;\r\n}\r\n\r\n\r\nclass DevContracts extends React.Component {\r\n   state = {\r\n     sortBy: null,\r\n     sortDirection: true,\r\n     data: [],\r\n     isLoading: true,\r\n     error: null,\r\n   }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchFakeJson();\r\n    \r\n    this.setState({ data, isLoading: false });\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ isLoading: true, error: null });\r\n    \r\n    window.scrollTo(0, 0);\r\n    \r\n    this.textbox.value = '';\r\n    \r\n    fetchFakeJson().then( data => {\r\n      this.setState({ data, isLoading: false });\r\n    } )\r\n  }\r\n\r\n  loadCustomData = () => {    \r\n    const jsonText = JsonData.map();\r\n    let json;\r\n\r\n    try {\r\n      json = JSON.parse(jsonText);\r\n\r\n      if (json.length > 0) {\r\n        this.setState({ data: json });\r\n      } else {\r\n        this.setState({ error: 'Empty collection of data detected' });\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: 'Invalid data. Please validate your data first.' });\r\n    }\r\n  }\r\n\r\n  getHeaders = data => {\r\n    const headers = data.reduce((headers, item) => {\r\n      const _headers = Object.keys(item).reduce((_headers, header) => ({ ..._headers, [header]: null }), {});\r\n      \r\n      return {\r\n        ...headers,\r\n        ..._headers,\r\n      };\r\n    }, {});\r\n   \r\n    \r\n    return Object.keys(headers);\r\n  };\r\n\r\n  fillCells = headers => item => Object.assign({}, headers.reduce((_headers, header) => ({ ..._headers, [header]: null }), {}), item);\r\n\r\n  sortBy = sortBy => e => {\r\n     e.preventDefault();\r\n    \r\n    this.setState(state => ({ sortBy, sortDirection: state.sortBy === sortBy ? !state.sortDirection : true }));\r\n  }\r\n  \r\n  sortDataBy = (sortBy, direction) => (a, b) => {\r\n    if ( direction ) {\r\n      return a[sortBy] > b[sortBy] ? 1 : (a[sortBy] < b[sortBy] ? -1 : 0);\r\n    }\r\n    \r\n    return a[sortBy] > b[sortBy] ? -1 : a[sortBy] < b[sortBy] ? 1 : 0;\r\n  };\r\n  \r\n  render() {\r\n    const { data, sortBy, sortDirection, isLoading, error } = this.state;\r\n    \r\n    const headers = this.getHeaders(data);\r\n    \r\n    return (\r\n      <div>\r\n        <div class=\"responsive-table\">\r\n          <div id=\"dynamic-table\">\r\n            { isLoading && <span>Loading...</span> }\r\n            <table id=\"sortable\" style={{ display: isLoading ? 'none' : 'inherit' }}>\r\n              <thead>\r\n                <tr>\r\n                  { headers.map( header => (\r\n                    <th key={header} className={sortBy === header ? sortDirection ? 'ascendent_sort' : 'descendent_sort' : ''}><a href=\"javascript:;\" onClick={this.sortBy(header)}>{header.toUpperCase()}</a></th>\r\n                  )) }\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { data.sort(this.sortDataBy(sortBy, sortDirection)).map(this.fillCells(headers)).map( (item, rowIndex) => (\r\n                  <tr key={rowIndex}>\r\n                    {Object.values(item).map( (value, cellIndex) => (\r\n                      <td key={`${rowIndex}.${cellIndex}`}>{value}</td>\r\n                    ) )}\r\n                  </tr>\r\n                ) ) }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n    </div>\r\n\r\n    <button class=\"btn\" onClick={this.reset}>Reset Table (random data)</button>{' '}\r\n    <button class=\"btn\" onClick={this.loadCustomData}>Load custom data</button>\r\n\r\n    <div class=\"custom-data\">\r\n      { error && <p className=\"error\">{error}</p> }\r\n      <textarea name=\"customData\" id=\"textbox\" ref={el => { this.textbox = el }} cols=\"30\" rows=\"10\"></textarea>\r\n    </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const dynamicTable = document.getElementById('root');\r\n// ReactDOM.render(<App />, dynamicTable);\r\nexport default DevContracts;\r\n"]},"metadata":{},"sourceType":"module"}