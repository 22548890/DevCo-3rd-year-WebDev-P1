{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfsas\\\\OneDrive\\\\Documents\\\\DevCo\\\\dev-co\\\\frontend\\\\src\\\\Components\\\\TableApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Table from \"./Table\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableApp() {\n  _s();\n\n  // data state to store the TV Maze API data. Its initial value is an empty array\n  const [data, setData] = useState([]); // Using useEffect to call the API once mounted and set the data\n\n  useEffect(() => {\n    (async () => {\n      const result = await axios.get('http://127.0.0.1:5000/getContracts'); //get\n\n      setData(result.data);\n    })();\n  }, []);\n  const columns = useMemo(() => [{\n    // first group - TV Show\n    Header: \"TV Show\",\n    // First group columns\n    columns: [{\n      Header: \"id\",\n      accessor: \"id\"\n    }, {\n      Header: \"company_id\",\n      accessor: \"company_id\"\n    }]\n  }, {\n    // Second group - Details\n    Header: \"Details\",\n    // Second group columns\n    columns: [{\n      Header: \"Language\",\n      accessor: \"show.language\"\n    }, {\n      Header: \"Genre(s)\",\n      accessor: \"show.genres\"\n    }, {\n      Header: \"Runtime\",\n      accessor: \"show.runtime\"\n    }, {\n      Header: \"Status\",\n      accessor: \"show.status\"\n    }]\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableApp, \"WraXYNH1W1loa0Y6z20i0MNWuRQ=\");\n\n_c = TableApp;\nexport default TableApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableApp\");","map":{"version":3,"sources":["C:/Users/mfsas/OneDrive/Documents/DevCo/dev-co/frontend/src/Components/TableApp.js"],"names":["React","useMemo","useState","useEffect","Table","axios","TableApp","data","setData","result","get","columns","Header","accessor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFkB,CAIlB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMM,MAAM,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,oCAAV,CAArB,CADW,CAC0D;;AACrEF,MAAAA,OAAO,CAACC,MAAM,CAACF,IAAR,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAMI,OAAO,GAAGV,OAAO,CACrB,MAAM,CACJ;AACE;AACAW,IAAAA,MAAM,EAAE,SAFV;AAGE;AACAD,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,IADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,YADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO;AAJX,GADI,EAgBJ;AACE;AACAD,IAAAA,MAAM,EAAE,SAFV;AAGE;AACAD,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO,EASP;AACED,MAAAA,MAAM,EAAE,SADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KATO,EAaP;AACED,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAbO;AAJX,GAhBI,CADe,EAyCrB,EAzCqB,CAAvB;AA4CA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEF,OAAhB;AAAyB,MAAA,IAAI,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7DQD,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\r\n\r\nimport Table from \"./Table\";\r\nimport axios from 'axios'\r\n\r\n\r\nfunction TableApp() {\r\n  // data state to store the TV Maze API data. Its initial value is an empty array\r\n  const [data, setData] = useState([]);\r\n\r\n  // Using useEffect to call the API once mounted and set the data\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await axios.get('http://127.0.0.1:5000/getContracts');//get\r\n      setData(result.data);\r\n    })();\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        // first group - TV Show\r\n        Header: \"TV Show\",\r\n        // First group columns\r\n        columns: [\r\n          {\r\n            Header: \"id\",\r\n            accessor: \"id\"\r\n          },\r\n          {\r\n            Header: \"company_id\",\r\n            accessor: \"company_id\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        // Second group - Details\r\n        Header: \"Details\",\r\n        // Second group columns\r\n        columns: [\r\n          {\r\n            Header: \"Language\",\r\n            accessor: \"show.language\"\r\n          },\r\n          {\r\n            Header: \"Genre(s)\",\r\n            accessor: \"show.genres\"\r\n          },\r\n          {\r\n            Header: \"Runtime\",\r\n            accessor: \"show.runtime\"\r\n          },\r\n          {\r\n            Header: \"Status\",\r\n            accessor: \"show.status\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Table columns={columns} data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableApp;"]},"metadata":{},"sourceType":"module"}