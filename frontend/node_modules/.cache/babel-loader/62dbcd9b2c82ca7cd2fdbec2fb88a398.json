{"ast":null,"code":"var _jsxFileName = \"/home/chris/data/cs334/group_32/frontend/src/Components/Other/Contracts.js\";\nimport Contract from './Contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contracts = _ref => {\n  let {\n    contracts,\n    all,\n    open,\n    closed\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [contracts.map(contract => all ? /*#__PURE__*/_jsxDEV(Contract, {\n      contract: contract\n    }, contract.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 18\n    }, this)), contracts.filter(contract => contract.open == true).map(contract => open ? /*#__PURE__*/_jsxDEV(Contract, {\n      contract: contract\n    }, contract.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }, this)), contracts.filter(contract => contract.open == false).map(contract => closed ? /*#__PURE__*/_jsxDEV(Contract, {\n      contract: contract\n    }, contract.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Contracts;\nexport default Contracts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contracts\");","map":{"version":3,"sources":["/home/chris/data/cs334/group_32/frontend/src/Components/Other/Contracts.js"],"names":["Contract","Contracts","contracts","all","open","closed","map","contract","id","filter"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;;;AAGA,MAAMC,SAAS,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,GAAqC;AAEtD,sBACE;AAAA,eACGH,SAAS,CAACI,GAAV,CAAeC,QAAD,IACbJ,GAAG,gBACD,QAAC,QAAD;AAA4B,MAAA,QAAQ,EAAEI;AAAtC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADC,gBAEM;AAAA;AAAA;AAAA;AAAA,YAHV,CADH,EAMGN,SAAS,CAACO,MAAV,CAAiBF,QAAQ,IAAIA,QAAQ,CAACH,IAAT,IAAiB,IAA9C,EAAoDE,GAApD,CAAyDC,QAAD,IACvDH,IAAI,gBACF,QAAC,QAAD;AAA4B,MAAA,QAAQ,EAAEG;AAAtC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADE,gBAEK;AAAA;AAAA;AAAA;AAAA,YAHV,CANH,EAWGN,SAAS,CAACO,MAAV,CAAiBF,QAAQ,IAAIA,QAAQ,CAACH,IAAT,IAAiB,KAA9C,EAAqDE,GAArD,CAA0DC,QAAD,IACxDF,MAAM,gBACJ,QAAC,QAAD;AAA4B,MAAA,QAAQ,EAAEE;AAAtC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADI,gBAEG;AAAA;AAAA;AAAA;AAAA,YAHV,CAXH;AAAA,kBADF;AAmBD,CArBD;;KAAMP,S;AAuBN,eAAeA,SAAf","sourcesContent":["import Contract from './Contract'\n\n\nconst Contracts = ({ contracts, all, open, closed }) => {\n\n  return (\n    <>\n      {contracts.map((contract) => (\n        all ? (\n          <Contract key={contract.id} contract={contract}\n          />) : (<p></p>)))\n      }\n      {contracts.filter(contract => contract.open == true).map((contract) => (\n        open ? (\n          <Contract key={contract.id} contract={contract}\n          />) : (<p></p>)))\n      }\n      {contracts.filter(contract => contract.open == false).map((contract) => (\n        closed ? (\n          <Contract key={contract.id} contract={contract}\n          />) : (<p></p>)))\n      }\n    </>\n  )\n}\n\nexport default Contracts"]},"metadata":{},"sourceType":"module"}